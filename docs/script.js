/*! Earth System Model Visualization v1.0.0 | Built: 2025-06-09T21:36:40.016Z */
class DataManager{constructor(){this.cache=new Map;const e="yunks128.github.io"===window.location.hostname;this.dataUrl=e?"https://yunks128.github.io/earth-system-model-viz/data/earth-system-data.json":"data/earth-system-data.json",console.log("🔍 DataManager initialized with URL:",this.dataUrl)}async loadData(){try{if(this.cache.has("mainData"))return console.log("📦 Loading data from cache"),this.cache.get("mainData");console.log("🌐 Fetching data from:",this.dataUrl);const e=await fetch(this.dataUrl);if(!e.ok)throw new Error(`HTTP ${e.status}: ${e.statusText}`);const t=await e.json();this.validateData(t);const s=this.processData(t);return this.cache.set("mainData",s),console.log("✅ Data loaded and processed successfully"),s}catch(e){return console.error("❌ Failed to load data:",e),console.error("🌐 Attempted URL:",this.dataUrl),console.error("🔗 Current location:",window.location.href),console.error("🏠 Hostname:",window.location.hostname),this.loadFallbackData()}}validateData(e){const t=["variables","models","categories"];for(const s of t)if(!e[s]||!Array.isArray(e[s]))throw new Error(`Missing or invalid ${s} array in data`);if(0===e.variables.length)throw new Error("No variables found in data");if(0===e.models.length)throw new Error("No models found in data");console.log(`✅ Data validation passed: ${e.variables.length} variables, ${e.models.length} models`)}processData(e){const t=new Map;e.models.forEach((e=>{t.set(e.name,e)}));const s=new Map;e.categories.forEach((e=>{s.set(e.name,e)}));const i=e.variables.map((e=>({...e,models:Array.isArray(e.models)?e.models:e.models.split(/[,;]\s*/),sources:Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/),searchText:this.createSearchText(e),modelObjects:this.getModelObjects(e.models,t),categoryObject:s.get(e.category)})));return{...e,variables:i,modelsMap:t,categoriesMap:s,metadata:{...e.metadata,processedAt:(new Date).toISOString(),totalVariables:i.length,totalModels:e.models.length,totalCategories:e.categories.length}}}createSearchText(e){const t=Array.isArray(e.sources)?e.sources.join(" "):e.sources,s=Array.isArray(e.models)?e.models.join(" "):e.models;return[e.variable,e.category,t,s,e.description||"",e.units||""].join(" ").toLowerCase()}getModelObjects(e,t){return(Array.isArray(e)?e:[e]).map((e=>t.get(e))).filter(Boolean)}loadFallbackData(){console.warn("⚠️ Loading fallback data...");return this.processData({metadata:{title:"Earth System Model Data (Fallback)",version:"1.0.0-fallback",totalVariables:5,totalModels:2},models:[{name:"ECCO",fullName:"Estimating the Circulation and Climate of the Ocean",description:"Ocean state estimation system",domain:"Ocean & Sea Ice"},{name:"ISSM",fullName:"Ice Sheet System Model",description:"Ice sheet dynamics modeling",domain:"Ice Sheet & Land Motion"}],categories:[{name:"Ocean and Sea Ice Variables",description:"Ocean circulation and sea ice properties",color:"#4facfe"},{name:"Land and Terrestrial Variables",description:"Ice sheets and land motion",color:"#43e97b"}],variables:[{id:"ssh",variable:"Sea Surface Height",category:"Ocean and Sea Ice Variables",sources:["JASON-3","Sentinel-6"],models:["ECCO"],units:"meters",description:"Height of sea surface"},{id:"sst",variable:"Sea Surface Temperature",category:"Ocean and Sea Ice Variables",sources:["MODIS","VIIRS"],models:["ECCO"],units:"°C",description:"Temperature of sea surface"},{id:"iv",variable:"Ice Velocity",category:"Land and Terrestrial Variables",sources:["Landsat","Sentinel-1"],models:["ISSM"],units:"m/year",description:"Velocity of ice motion"},{id:"ise",variable:"Ice Sheet Elevation",category:"Land and Terrestrial Variables",sources:["ICESat-2"],models:["ISSM"],units:"meters",description:"Elevation of ice surface"},{id:"rsl",variable:"Relative Sea Level",category:"Land and Terrestrial Variables",sources:["Tide Gauge"],models:["ISSM"],units:"meters",description:"Sea level relative to land"}]})}filterData(e,t="all",s=""){let i=[...e];if(t&&"all"!==t&&(i=i.filter((e=>(Array.isArray(e.models)?e.models:[e.models]).includes(t)))),s&&""!==s.trim()){const e=s.toLowerCase().trim();i=i.filter((t=>t.searchText&&t.searchText.includes(e)))}return i}groupByCategory(e){const t={};return e.forEach((e=>{const s=e.category;t[s]||(t[s]=[]),t[s].push(e)})),t}sortData(e,t){const s=[...e];switch(t){case"variable":return s.sort(((e,t)=>e.variable.localeCompare(t.variable)));case"category":return s.sort(((e,t)=>{const s=e.category.localeCompare(t.category);return 0!==s?s:e.variable.localeCompare(t.variable)}));case"model":return s.sort(((e,t)=>{const s=Array.isArray(e.models)?e.models.join(", "):e.models,i=Array.isArray(t.models)?t.models.join(", "):t.models;return s.localeCompare(i)}));default:return s}}calculateStatistics(e,t){const s=e.length,i=new Set(e.map((e=>e.category))).size,a=new Set;e.forEach((e=>{(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).forEach((e=>a.add(e.trim())))}));return{visibleVariables:s,activeCategories:i,totalMissions:a.size,totalVariables:t.variables.length,totalModels:t.models.length}}getModelCounts(e){const t={ECCO:0,ISSM:0,CARDAMOM:0,"CMS-FLUX":0,"MOMO-CHEM":0};return e.forEach((e=>{(Array.isArray(e.models)?e.models:e.models.split(/[,;]\s*/)).forEach((e=>{const s=e.trim();t.hasOwnProperty(s)&&t[s]++}))})),t}exportToCSV(e){const t=e.map((e=>{const t=Array.isArray(e.sources)?e.sources.join("; "):e.sources,s=Array.isArray(e.models)?e.models.join("; "):e.models;return[this.escapeCsvField(e.variable),this.escapeCsvField(e.category),this.escapeCsvField(t),this.escapeCsvField(s),this.escapeCsvField(e.units||""),this.escapeCsvField(e.description||"")].join(",")}));return[["Variable","Category","Sources","Models","Units","Description"].join(","),...t].join("\n")}escapeCsvField(e){if(null==e)return"";const t=String(e);return t.includes(",")||t.includes('"')||t.includes("\n")?'"'+t.replace(/"/g,'""')+'"':t}exportToJSON(e){const t={metadata:{title:"Earth System Model Variables Export",exportDate:(new Date).toISOString(),totalVariables:e.length,version:"1.0.0"},variables:e.map((e=>({id:e.id,variable:e.variable,category:e.category,sources:Array.isArray(e.sources)?e.sources:[e.sources],models:Array.isArray(e.models)?e.models:[e.models],units:e.units,description:e.description,applications:e.applications})))};return JSON.stringify(t,null,2)}getVariableById(e,t){return e.find((e=>e.id===t))}getVariablesByModel(e,t){return e.filter((e=>(Array.isArray(e.models)?e.models:[e.models]).includes(t)))}getVariablesByCategory(e,t){return e.filter((e=>e.category===t))}getUniqueSources(e){const t=new Set;return e.forEach((e=>{(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).forEach((e=>{t.add(e.trim())}))})),Array.from(t).sort()}getSearchSuggestions(e,t,s=5){if(!t||t.length<2)return[];const i=new Set,a=t.toLowerCase();return e.forEach((e=>{e.variable.toLowerCase().includes(a)&&i.add(e.variable);(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).forEach((e=>{e.toLowerCase().includes(a)&&i.add(e.trim())}));(Array.isArray(e.models)?e.models:e.models.split(/[,;]\s*/)).forEach((e=>{e.toLowerCase().includes(a)&&i.add(e.trim())}))})),Array.from(i).slice(0,s)}clearCache(){this.cache.clear(),console.log("🧹 Data cache cleared")}getCacheStats(){return{size:this.cache.size,keys:Array.from(this.cache.keys()),memoryUsage:this.estimateMemoryUsage()}}estimateMemoryUsage(){let e=0;return this.cache.forEach(((t,s)=>{e+=2*s.length,e+=2*JSON.stringify(t).length})),e}}"undefined"!=typeof module&&module.exports&&(module.exports=DataManager);class UIComponents{constructor(){this.tooltip=null,this.createTooltip()}createTooltip(){this.tooltip=document.createElement("div"),this.tooltip.className="tooltip",this.tooltip.style.cssText="\n      position: absolute;\n      background: rgba(0, 0, 0, 0.9);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 4px;\n      font-size: 14px;\n      pointer-events: none;\n      z-index: 1000;\n      opacity: 0;\n      transition: opacity 0.2s;\n      max-width: 300px;\n      word-wrap: break-word;\n    ",document.body.appendChild(this.tooltip)}showTooltip(e,t){if(!t)return;this.tooltip.textContent=t,this.tooltip.style.opacity="1";const s=e.getBoundingClientRect(),i=this.tooltip.getBoundingClientRect();let a=s.bottom+10,n=s.left+s.width/2-i.width/2;n<10&&(n=10),n+i.width>window.innerWidth-10&&(n=window.innerWidth-i.width-10),a+i.height>window.innerHeight-10&&(a=s.top-i.height-10),this.tooltip.style.top=a+"px",this.tooltip.style.left=n+"px"}hideTooltip(){this.tooltip.style.opacity="0"}renderCategories(e,t,s={}){e&&(e.innerHTML="",Object.entries(t).forEach((([t,i])=>{const a=this.createCategoryCard(t,i,s);e.appendChild(a)})))}createCategoryCard(e,t,s){const i=document.createElement("div");i.className="category-card",i.setAttribute("data-category",e);const a=document.createElement("div");a.className="category-header";const n=document.createElement("h3");n.textContent=e,n.className="category-title";const o=document.createElement("span");o.textContent=`${t.length} variables`,o.className="category-count",a.appendChild(n),a.appendChild(o);const r=document.createElement("div");return r.className="variables-list",t.forEach((e=>{const t=this.createVariableItem(e,s);r.appendChild(t)})),i.appendChild(a),i.appendChild(r),i}createVariableItem(e,t){const s=document.createElement("div");s.className="variable-item",s.setAttribute("data-variable",e.variable),s.setAttribute("tabindex","0"),s.setAttribute("role","button");const i=document.createElement("div");i.className="variable-name",i.textContent=e.variable;const a=document.createElement("div");a.className="variable-meta";const n=document.createElement("div");n.className="variable-sources";const o=Array.isArray(e.sources)?e.sources.slice(0,3).join(", "):e.sources;n.textContent=`Sources: ${o}${Array.isArray(e.sources)&&e.sources.length>3?"...":""}`;const r=document.createElement("div");r.className="variable-models";return(Array.isArray(e.models)?e.models:[e.models]).forEach((e=>{const s=document.createElement("span");s.className="model-tag",s.textContent=e,s.setAttribute("data-model",e),t.onModelTagClick&&s.addEventListener("click",(s=>{t.onModelTagClick(e,s)})),r.appendChild(s)})),a.appendChild(n),a.appendChild(r),s.appendChild(i),s.appendChild(a),t.onVariableClick&&(s.addEventListener("click",(()=>{t.onVariableClick(e)})),s.addEventListener("keydown",(s=>{"Enter"!==s.key&&" "!==s.key||(s.preventDefault(),t.onVariableClick(e))}))),s}renderTable(e,t,s={}){e&&(e.innerHTML="",t.forEach((t=>{const i=this.createTableRow(t,s);e.appendChild(i)})))}createTableRow(e,t){const s=document.createElement("tr");s.className="table-row",s.setAttribute("data-variable",e.variable);const i=document.createElement("td");i.className="variable-cell",i.textContent=e.variable,t.onVariableClick&&(i.style.cursor="pointer",i.addEventListener("click",(()=>{t.onVariableClick(e)})));const a=document.createElement("td");a.className="category-cell",a.textContent=e.category;const n=document.createElement("td");n.className="sources-cell";const o=Array.isArray(e.sources)?e.sources.join(", "):e.sources;n.textContent=o;const r=document.createElement("td");r.className="models-cell";const l=Array.isArray(e.models)?e.models.join(", "):e.models;return r.textContent=l,s.appendChild(i),s.appendChild(a),s.appendChild(n),s.appendChild(r),s}highlightSearchResults(e){if(!e)return;document.querySelectorAll(".variable-name, .variable-sources, .model-tag").forEach((t=>{t.textContent.toLowerCase().includes(e.toLowerCase())?t.classList.add("highlighted"):t.classList.remove("highlighted")}))}updateResponsiveLayout(){const e=window.innerWidth<768,t=window.innerWidth>=768&&window.innerWidth<1024;document.body.classList.toggle("mobile",e),document.body.classList.toggle("tablet",t),document.body.classList.toggle("desktop",!e&&!t);const s=document.getElementById("categoryGrid");if(s){const i=e?1:t?2:3;s.style.gridTemplateColumns=`repeat(${i}, 1fr)`}}showLoading(e,t="Loading..."){e&&(e.classList.add("loading"),e.innerHTML=`\n      <div class="loading-spinner"></div>\n      <div class="loading-text">${t}</div>\n    `)}hideLoading(e){e&&e.classList.remove("loading")}createEmptyState(e,t,s="🔍"){e&&(e.innerHTML=`\n      <div class="empty-state">\n        <div class="empty-icon">${s}</div>\n        <div class="empty-message">${t}</div>\n      </div>\n    `)}animateIn(e,t=0){e&&(e.style.opacity="0",e.style.transform="translateY(20px)",setTimeout((()=>{e.style.transition="opacity 0.3s ease, transform 0.3s ease",e.style.opacity="1",e.style.transform="translateY(0)"}),t))}showNotification(e,t="info",s=3e3){const i=document.createElement("div");i.className=`notification notification-${t}`,i.style.cssText=`\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${"error"===t?"#ff4757":"success"===t?"#2ed573":"#3742fa"};\n      color: white;\n      padding: 16px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      max-width: 400px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transform: translateX(100%);\n      transition: transform 0.3s ease;\n    `,i.textContent=e,document.body.appendChild(i),setTimeout((()=>{i.style.transform="translateX(0)"}),100),setTimeout((()=>{i.style.transform="translateX(100%)",setTimeout((()=>{i.parentNode&&i.parentNode.removeChild(i)}),300)}),s)}destroy(){this.tooltip&&this.tooltip.parentNode&&this.tooltip.parentNode.removeChild(this.tooltip)}}"undefined"!=typeof module&&module.exports&&(module.exports=UIComponents);class NetworkView{constructor(){this.canvas=null,this.context=null,this.simulation=null,this.nodes=[],this.links=[],this.width=800,this.height=600,this.transform=d3.zoomIdentity}init(e,t,s){e&&"undefined"!=typeof d3?(this.canvas=e,this.context=e.getContext("2d"),this.updateDimensions(),this.processData(t,s),this.setupSimulation(),this.setupInteractions(),console.log("🕸️ Network view initialized")):console.warn("Canvas or D3.js not available for network view")}updateDimensions(){if(!this.canvas)return;const e=this.canvas.parentElement;this.width=e.clientWidth||1200,this.height=Math.max(e.clientHeight||800,800),this.canvas.width=this.width*window.devicePixelRatio,this.canvas.height=this.height*window.devicePixelRatio,this.canvas.style.width=this.width+"px",this.canvas.style.height=this.height+"px",this.context.scale(window.devicePixelRatio,window.devicePixelRatio)}processData(e,t){this.nodes=[],this.links=[];const s=new Map;let i=0;const a=new Set;e.forEach((e=>{(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).forEach((e=>a.add(e.trim())))}));const n=[...new Set(e.map((e=>e.category)))],o=.2*Math.min(this.width,this.height);n.forEach(((t,a)=>{const r=a/n.length*2*Math.PI,l=e.filter((e=>e.category===t)),d={id:i++,name:t,type:"category",x:.5*this.width+Math.cos(r)*o,y:.5*this.height+Math.sin(r)*o,radius:35+2*l.length,color:this.getCategoryColor(t),variables:l,variableCount:l.length};this.nodes.push(d),s.set("category_"+t,d)})),e.forEach(((t,a)=>{const n=s.get("category_"+t.category),o=e.filter((e=>e.category===t.category)),r=o.findIndex((e=>e.id===t.id))/o.length*2*Math.PI,l=120+2*o.length,d={id:i++,name:t.variable,type:"variable",category:t.category,sources:Array.isArray(t.sources)?t.sources:t.sources.split(/[,;]\s*/),models:Array.isArray(t.models)?t.models:[t.models],units:t.units,description:t.description,variableData:t,x:n.x+Math.cos(r)*l,y:n.y+Math.sin(r)*l,radius:12,color:this.getCategoryColor(t.category),categoryNode:n};this.nodes.push(d),s.set("variable_"+t.id,d)}));const r=[{x:.15,y:.2},{x:.85,y:.2},{x:.15,y:.8},{x:.85,y:.8},{x:.5,y:.1}];t.forEach(((t,a)=>{const n=r[a]||{x:.5,y:.9},o=e.filter((e=>(Array.isArray(e.models)?e.models:[e.models]).includes(t.name))),l={id:i++,name:t.name,type:"model",fullName:t.fullName,description:t.description,domain:t.domain,x:this.width*n.x,y:this.height*n.y,radius:30+.5*o.length,color:this.getModelColor(t.name),variableCount:o.length};this.nodes.push(l),s.set("model_"+t.name,l)}));const l=Array.from(a);l.forEach(((t,a)=>{const n=a%8/8*2*Math.PI,o=.45*Math.min(this.width,this.height),r=(Math.random()-.5)*(2*Math.PI/8*.8),l=60*(Math.random()-.5),d=e.filter((e=>(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).some((e=>e.trim()===t)))),c={id:i++,name:t,type:"source",x:.5*this.width+Math.cos(n+r)*(o+l),y:.5*this.height+Math.sin(n+r)*(o+l),radius:8+Math.min(.5*d.length,6),color:this.getSourceColor(t),variables:d,variableCount:d.length};this.nodes.push(c),s.set("source_"+t,c)})),e.forEach((e=>{const t=s.get("variable_"+e.id),i=s.get("category_"+e.category);t&&i&&this.links.push({source:i.id,target:t.id,type:"category-variable",strength:.8,color:"#43e97b",distance:80})})),e.forEach((e=>{const t=s.get("variable_"+e.id);(Array.isArray(e.models)?e.models:[e.models]).forEach((e=>{const i=s.get("model_"+e);t&&i&&this.links.push({source:t.id,target:i.id,type:"variable-model",strength:.4,color:"#667eea",distance:150})}))})),e.forEach((e=>{const t=s.get("variable_"+e.id);(Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/)).forEach((e=>{const i=s.get("source_"+e.trim());t&&i&&this.links.push({source:t.id,target:i.id,type:"variable-source",strength:.2,color:"#ffa726",distance:120})}))})),console.log(`🕸️ Network data processed: ${this.nodes.length} nodes (${n.length} categories, ${e.length} variables, ${t.length} models, ${l.length} sources), ${this.links.length} links`)}getModelColor(e){return{ECCO:"#2196f3",ISSM:"#ff9800",CARDAMOM:"#9c27b0","CMS-FLUX":"#4caf50","MOMO-CHEM":"#e91e63"}[e]||"#607d8b"}getCategoryColor(e){return{"Ocean and Sea Ice Variables":"#4facfe","Land and Terrestrial Variables":"#43e97b","Atmospheric Composition":"#fa709a","Carbon Cycle Components":"#fee140","Climate and Reanalysis":"#a8edea"}[e]||"#95a5a6"}getSourceColor(e){return e.includes("GRACE")||e.includes("GOCE")?"#8bc34a":e.includes("ICESat")||e.includes("GLAS")?"#00bcd4":e.includes("MODIS")||e.includes("VIIRS")?"#ff5722":e.includes("AVHRR")||e.includes("METOP")?"#3f51b5":e.includes("OCO")||e.includes("GOSAT")?"#795548":e.includes("OMI")||e.includes("TROPOMI")?"#9e9e9e":e.includes("Landsat")||e.includes("Sentinel")?"#ff9800":e.includes("JASON")||e.includes("TOPEX")?"#2196f3":e.includes("SMAP")||e.includes("SMOS")?"#4caf50":e.includes("ARGO")||e.includes("CTD")?"#00acc1":"#607d8b"}setupSimulation(){if("undefined"==typeof d3)return;this.simulation=d3.forceSimulation(this.nodes).force("link",d3.forceLink(this.links).id((e=>e.id)).distance((e=>{switch(e.type){case"category-variable":return 80;case"variable-model":return 150;case"variable-source":return 120;default:return 100}})).strength((e=>{switch(e.type){case"category-variable":return.8;case"variable-model":return.6;case"variable-source":return.4;default:return.3}}))).force("charge",d3.forceManyBody().strength((e=>{switch(e.type){case"category":return-2e3;case"model":return-1500;case"variable":return-600;case"source":return-400;default:return-500}}))).force("center",d3.forceCenter(this.width/2,this.height/2)).force("collision",d3.forceCollide().radius((e=>e.radius+8)).strength(.9)).force("x",d3.forceX().x((e=>{if("model"===e.type){const t=[{x:.15,y:.2},{x:.85,y:.2},{x:.15,y:.8},{x:.85,y:.8},{x:.5,y:.1}],s=["ECCO","ISSM","CARDAMOM","CMS-FLUX","MOMO-CHEM"].indexOf(e.name);if(s>=0&&s<t.length)return this.width*t[s].x}return this.width/2})).strength((e=>"model"===e.type?.3:.05))).force("y",d3.forceY().y((e=>{if("model"===e.type){const t=[{x:.15,y:.2},{x:.85,y:.2},{x:.15,y:.8},{x:.85,y:.8},{x:.5,y:.1}],s=["ECCO","ISSM","CARDAMOM","CMS-FLUX","MOMO-CHEM"].indexOf(e.name);if(s>=0&&s<t.length)return this.height*t[s].y}return this.height/2})).strength((e=>"model"===e.type?.3:.05))).force("radial",d3.forceRadial().radius((e=>{switch(e.type){case"category":return.12*Math.min(this.width,this.height);case"variable":return.22*Math.min(this.width,this.height);case"source":return.42*Math.min(this.width,this.height);case"model":return.35*Math.min(this.width,this.height);default:return 0}})).x(this.width/2).y(this.height/2).strength((e=>{switch(e.type){case"category":return.3;case"variable":return.2;case"source":return.15;default:return.1}}))).on("tick",(()=>this.render()));const e=d3.zoom().scaleExtent([.1,3]).on("zoom",(e=>{this.transform=e.transform,this.render()}));d3.select(this.canvas).call(e)}setupInteractions(){this.canvas&&(this.canvas.addEventListener("mousemove",(e=>{const t=this.canvas.getBoundingClientRect(),s=(e.clientX-t.left-this.transform.x)/this.transform.k,i=(e.clientY-t.top-this.transform.y)/this.transform.k,a=this.getNodeAt(s,i);a?(this.canvas.style.cursor="pointer",this.showNodeTooltip(a,e.clientX,e.clientY)):(this.canvas.style.cursor="default",this.hideTooltip())})),this.canvas.addEventListener("click",(e=>{const t=this.canvas.getBoundingClientRect(),s=(e.clientX-t.left-this.transform.x)/this.transform.k,i=(e.clientY-t.top-this.transform.y)/this.transform.k,a=this.getNodeAt(s,i);a&&this.handleNodeClick(a)})),this.canvas.addEventListener("mouseleave",(()=>{this.hideTooltip()})))}getNodeAt(e,t){return this.nodes.find((s=>{const i=s.x-e,a=s.y-t;return Math.sqrt(i*i+a*a)<20}))}handleNodeClick(e){window.app&&"model"===e.type&&(window.app.currentFilter=e.name,window.app.updateFilterButtons(),window.app.filterAndRender())}showNodeTooltip(e,t,s){let i=document.getElementById("network-tooltip");i||(i=document.createElement("div"),i.id="network-tooltip",i.style.cssText="\n        position: fixed;\n        background: rgba(0, 0, 0, 0.9);\n        color: white;\n        padding: 15px;\n        border-radius: 8px;\n        font-size: 13px;\n        pointer-events: none;\n        z-index: 1000;\n        max-width: 300px;\n        word-wrap: break-word;\n        line-height: 1.4;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      ",document.body.appendChild(i));let a=`<div style="color: ${e.color}; font-weight: bold; margin-bottom: 8px;">${e.name}</div>`;switch(e.type){case"model":a+=`<div style="font-style: italic; margin-bottom: 6px;">${e.fullName||""}</div>`,e.domain&&(a+=`<div><strong>Domain:</strong> ${e.domain}</div>`),e.description&&(a+=`<div style="margin-top: 6px;">${e.description}</div>`);break;case"variable":a+=`<div><strong>Category:</strong> ${e.category}</div>`,e.units&&(a+=`<div><strong>Units:</strong> ${e.units}</div>`),a+=`<div><strong>Models:</strong> ${e.models.join(", ")}</div>`,a+=`<div><strong>Sources:</strong> ${e.sources.slice(0,3).join(", ")}${e.sources.length>3?"...":""}</div>`,e.description&&(a+=`<div style="margin-top: 6px; font-style: italic;">${e.description}</div>`);break;case"source":if(a+="<div><strong>Type:</strong> Data Source/Mission</div>",a+=`<div><strong>Variables:</strong> ${e.variables.length}</div>`,e.variables.length>0){a+=`<div style="margin-top: 6px;"><strong>Used by:</strong><br>${e.variables.slice(0,3).map((e=>e.variable)).join("<br>")}${e.variables.length>3?"<br>...":""}</div>`}break;case"category":if(a+=`<div><strong>Variables:</strong> ${e.variables.length}</div>`,e.variables.length>0){a+=`<div><strong>Models:</strong> ${[...new Set(e.variables.flatMap((e=>e.models)))].join(", ")}</div>`;a+=`<div><strong>Data Sources:</strong> ${[...new Set(e.variables.flatMap((e=>Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/))))].length}</div>`}}i.innerHTML=a;const n=i.getBoundingClientRect();let o=t+15,r=s-10;o+n.width>window.innerWidth&&(o=t-n.width-15),r+n.height>window.innerHeight&&(r=s-n.height-15),o<0&&(o=10),r<0&&(r=10),i.style.left=o+"px",i.style.top=r+"px",i.style.display="block"}hideTooltip(){const e=document.getElementById("network-tooltip");e&&(e.style.display="none")}render(){this.context&&(this.context.save(),this.context.clearRect(0,0,this.width,this.height),this.context.translate(this.transform.x,this.transform.y),this.context.scale(this.transform.k,this.transform.k),this.links.forEach((e=>{const t=this.nodes.find((t=>t.id===e.source.id||t.id===e.source)),s=this.nodes.find((t=>t.id===e.target.id||t.id===e.target));if(t&&s){switch(this.context.beginPath(),this.context.moveTo(t.x,t.y),this.context.lineTo(s.x,s.y),this.context.strokeStyle=e.color||"#999",this.context.globalAlpha=.6,e.type){case"variable-model":this.context.lineWidth=2;break;case"variable-category":this.context.lineWidth=3;break;case"variable-source":this.context.lineWidth=1,this.context.setLineDash([5,5]);break;default:this.context.lineWidth=1}this.context.stroke(),this.context.setLineDash([]),this.context.globalAlpha=1}})),this.nodes.forEach((e=>{const t=e.radius||10;switch(this.context.beginPath(),this.context.arc(e.x,e.y,t,0,2*Math.PI),this.context.fillStyle=e.color||"#666",this.context.fill(),this.context.strokeStyle="#fff",this.context.lineWidth=2,e.type){case"model":this.context.lineWidth=3;break;case"category":this.context.setLineDash([3,3]);break;case"source":this.context.lineWidth=1;break;case"variable":this.context.stroke(),this.context.beginPath(),this.context.arc(e.x,e.y,t-2,0,2*Math.PI),this.context.lineWidth=1}let s,i;switch(this.context.stroke(),this.context.setLineDash([]),this.context.fillStyle="#fff",this.context.textAlign="center",this.context.textBaseline="middle",e.type){case"model":s=11,i=e.name;break;case"category":s=10,i=e.name.length>12?e.name.substring(0,12)+"...":e.name;break;case"variable":s=8,i=e.name.length>10?e.name.substring(0,10)+"...":e.name;break;case"source":s=7,i=e.name.length>8?e.name.substring(0,8)+"...":e.name;break;default:s=10,i=e.name}this.context.font=`${s}px Arial`,this.context.fillStyle="rgba(0,0,0,0.7)",this.context.fillText(i,e.x+1,e.y+1),this.context.fillStyle="#fff",this.context.fillText(i,e.x,e.y)})),this.context.restore())}update(e){this.simulation&&(this.nodes.forEach((t=>{"category"===t.type&&(t.variables=e.filter((e=>e.category===t.name)))})),this.simulation.alpha(.3).restart())}reset(){"undefined"!=typeof d3&&this.canvas&&(this.transform=d3.zoomIdentity,d3.select(this.canvas).transition().duration(750).call(d3.zoom().transform,d3.zoomIdentity))}exportImage(){if(!this.canvas)return;const e=document.createElement("a");e.download="earth-system-network.png",e.href=this.canvas.toDataURL(),e.click()}resize(){this.updateDimensions(),this.simulation&&this.simulation.force("center",d3.forceCenter(this.width/2,this.height/2)).alpha(.3).restart()}destroy(){this.simulation&&this.simulation.stop(),this.hideTooltip(),this.canvas&&(this.canvas.removeEventListener("mousemove",null),this.canvas.removeEventListener("click",null),this.canvas.removeEventListener("mouseleave",null))}}"undefined"!=typeof module&&module.exports&&(module.exports=NetworkView);class ModalManager{constructor(){this.modal=null,this.modalTitle=null,this.modalBody=null,this.isOpen=!1,this.init()}init(){this.modal=document.getElementById("detailModal"),this.modalTitle=document.getElementById("modalTitle"),this.modalBody=document.getElementById("modalBody"),this.modal&&this.setupEventListeners()}setupEventListeners(){document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.isOpen&&this.close()})),this.modal.addEventListener("click",(e=>{e.target===this.modal&&this.close()}));const e=this.modal.querySelector(".close-btn");e&&e.addEventListener("click",(()=>this.close()))}show(e,t){this.modal&&(this.modalTitle.textContent=e,this.modalBody.innerHTML=t,this.modal.style.display="flex",this.modal.setAttribute("aria-hidden","false"),this.isOpen=!0,this.modal.focus(),document.body.style.overflow="hidden",setTimeout((()=>{this.modal.classList.add("modal-open")}),10))}showVariableDetails(e,t){const s=e.variable,i=Array.isArray(e.sources)?e.sources:e.sources.split(/[,;]\s*/),a=Array.isArray(e.models)?e.models:e.models.split(/[,;]\s*/),n=`\n      <div class="modal-section">\n        <h4>Variable Information</h4>\n        <div class="detail-grid">\n          <div class="detail-item">\n            <label>Name:</label>\n            <span>${e.variable}</span>\n          </div>\n          <div class="detail-item">\n            <label>Category:</label>\n            <span>${e.category}</span>\n          </div>\n          ${e.units?`\n          <div class="detail-item">\n            <label>Units:</label>\n            <span>${e.units}</span>\n          </div>\n          `:""}\n          ${e.description?`\n          <div class="detail-item">\n            <label>Description:</label>\n            <span>${e.description}</span>\n          </div>\n          `:""}\n        </div>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Data Sources</h4>\n        <div class="sources-list">\n          ${i.map((e=>`\n            <div class="source-item">\n              <span class="source-name">${e.trim()}</span>\n            </div>\n          `)).join("")}\n        </div>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Earth System Models</h4>\n        <div class="models-list">\n          ${a.map((e=>{const s=t.models.find((t=>t.name===e.trim()));return`\n              <div class="model-item">\n                <div class="model-header">\n                  <span class="model-name">${e.trim()}</span>\n                  ${s?`<span class="model-domain">${s.domain||""}</span>`:""}\n                </div>\n                ${s?`\n                <div class="model-details">\n                  <div class="model-full-name">${s.fullName||""}</div>\n                  ${s.description?`<div class="model-description">${s.description}</div>`:""}\n                </div>\n                `:""}\n              </div>\n            `})).join("")}\n        </div>\n      </div>\n      \n      ${e.applications?`\n      <div class="modal-section">\n        <h4>Applications</h4>\n        <div class="applications-list">\n          ${Array.isArray(e.applications)?e.applications.map((e=>`<div class="application-item">${e}</div>`)).join(""):`<div class="application-item">${e.applications}</div>`}\n        </div>\n      </div>\n      `:""}\n      \n      <div class="modal-actions">\n        <button class="modal-btn" onclick="window.app?.filterAndRender(); window.app?.modalManager?.close();">\n          Filter by this variable\n        </button>\n        <button class="modal-btn secondary" onclick="navigator.share ? navigator.share({title: '${e.variable}', text: '${e.description||e.variable}', url: window.location.href}) : console.log('Share not supported')">\n          Share\n        </button>\n      </div>\n    `;this.show(s,n)}showModelDetails(e,t){if(!e)return;const s=e.name,i=t.length,a={};t.forEach((e=>{a[e.category]||(a[e.category]=[]),a[e.category].push(e)}));const n=`\n      <div class="modal-section">\n        <h4>Model Information</h4>\n        <div class="detail-grid">\n          <div class="detail-item">\n            <label>Name:</label>\n            <span>${e.name}</span>\n          </div>\n          ${e.fullName?`\n          <div class="detail-item">\n            <label>Full Name:</label>\n            <span>${e.fullName}</span>\n          </div>\n          `:""}\n          ${e.domain?`\n          <div class="detail-item">\n            <label>Domain:</label>\n            <span>${e.domain}</span>\n          </div>\n          `:""}\n          ${e.description?`\n          <div class="detail-item">\n            <label>Description:</label>\n            <span>${e.description}</span>\n          </div>\n          `:""}\n          <div class="detail-item">\n            <label>Variables:</label>\n            <span>${i} variables</span>\n          </div>\n        </div>\n      </div>\n      \n      ${Object.keys(a).length>0?`\n      <div class="modal-section">\n        <h4>Variables by Category</h4>\n        <div class="categories-list">\n          ${Object.entries(a).map((([e,t])=>`\n            <div class="category-group">\n              <h5 class="category-name">${e}</h5>\n              <div class="category-variables">\n                ${t.map((e=>`\n                  <div class="variable-summary" onclick="window.app?.handleVariableClick?.(${JSON.stringify(e).replace(/"/g,"&quot;")})">\n                    <span class="variable-name">${e.variable}</span>\n                    ${e.units?`<span class="variable-units">(${e.units})</span>`:""}\n                  </div>\n                `)).join("")}\n              </div>\n            </div>\n          `)).join("")}\n        </div>\n      </div>\n      `:""}\n      \n      ${e.url?`\n      <div class="modal-section">\n        <h4>External Links</h4>\n        <div class="links-list">\n          <a href="${e.url}" target="_blank" rel="noopener noreferrer" class="external-link">\n            Model Website\n          </a>\n        </div>\n      </div>\n      `:""}\n      \n      <div class="modal-actions">\n        <button class="modal-btn" onclick="window.app?.handleModelClick?.({currentTarget: {dataset: {model: '${e.name}'}}})">\n          Filter by ${e.name}\n        </button>\n        <button class="modal-btn secondary" onclick="window.app?.modalManager?.close()">\n          Close\n        </button>\n      </div>\n    `;this.show(s,n)}showAbout(){this.show("About Earth System Model Visualization",'\n      <div class="modal-section">\n        <h4>About This Visualization</h4>\n        <p>This interactive visualization explores the relationships between Earth system model variables, satellite missions, and data assimilation systems used in climate and Earth science research.</p>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Earth System Models</h4>\n        <ul>\n          <li><strong>ECCO</strong> - Ocean circulation and sea ice modeling</li>\n          <li><strong>ISSM</strong> - Ice sheet dynamics and sea level projection</li>\n          <li><strong>CARDAMOM</strong> - Terrestrial carbon cycle processes</li>\n          <li><strong>CMS-FLUX</strong> - Atmospheric carbon monitoring</li>\n          <li><strong>MOMO-CHEM</strong> - Atmospheric chemistry and air quality</li>\n        </ul>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Data Sources</h4>\n        <p>Data includes information from 100+ satellite missions, ground-based networks, and reanalysis products spanning ocean, land, atmosphere, and carbon cycle observations.</p>\n      </div>\n      \n      <div class="modal-section">\n        <h4>How to Use</h4>\n        <ul>\n          <li>Use the search bar to find specific variables or missions</li>\n          <li>Click model buttons to filter by Earth system model</li>\n          <li>Switch between card, network, and table views</li>\n          <li>Click on variables for detailed information</li>\n          <li>Export filtered data as CSV or JSON</li>\n        </ul>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Keyboard Shortcuts</h4>\n        <ul>\n          <li><kbd>/</kbd> - Focus search box</li>\n          <li><kbd>Esc</kbd> - Close modals</li>\n          <li><kbd>Ctrl+1/2/3</kbd> - Switch views</li>\n        </ul>\n      </div>\n      \n      <div class="modal-actions">\n        <button class="modal-btn" onclick="window.app?.modalManager?.close()">\n          Close\n        </button>\n      </div>\n    ')}showError(e,t,s=""){const i=`\n      <div class="modal-section error-section">\n        <div class="error-icon">⚠️</div>\n        <h4>${e}</h4>\n        <p>${t}</p>\n        ${s?`\n        <div class="error-details">\n          <details>\n            <summary>Technical Details</summary>\n            <pre>${s}</pre>\n          </details>\n        </div>\n        `:""}\n      </div>\n      \n      <div class="modal-actions">\n        <button class="modal-btn" onclick="location.reload()">\n          Reload Page\n        </button>\n        <button class="modal-btn secondary" onclick="window.app?.modalManager?.close()">\n          Close\n        </button>\n      </div>\n    `;this.show("Error",i)}close(){this.modal&&this.isOpen&&(this.modal.classList.remove("modal-open"),setTimeout((()=>{this.modal.style.display="none",this.modal.setAttribute("aria-hidden","true"),this.isOpen=!1,document.body.style.overflow="";const e=document.activeElement;e&&e!==document.body&&e.blur()}),300))}isModalOpen(){return this.isOpen}destroy(){this.close(),this.modal&&this.modal.removeEventListener("click",null),document.removeEventListener("keydown",null)}}"undefined"!=typeof module&&module.exports&&(module.exports=ModalManager);class EarthSystemViz{constructor(){this.data=null,this.filteredData=null,this.currentFilter="all",this.currentSearch="",this.currentView="cards",this.isLoading=!0,this.dataManager=null,this.uiComponents=null,this.networkView=null,this.modalManager=null,this.elements={},this.handleSearch=this.handleSearch.bind(this),this.handleFilter=this.handleFilter.bind(this),this.handleViewToggle=this.handleViewToggle.bind(this),this.handleModelClick=this.handleModelClick.bind(this),this.handleVariableClick=this.handleVariableClick.bind(this),this.handleKeyboard=this.handleKeyboard.bind(this),this.handleResize=this.handleResize.bind(this)}async init(){try{console.log("🚀 Initializing Earth System Model Visualization..."),this.cacheElements(),this.initializeComponents(),await this.loadData(),this.setupEventListeners(),this.render(),this.hideLoadingScreen(),console.log("✅ Application initialized successfully")}catch(e){console.error("❌ Failed to initialize application:",e),this.showError("Failed to initialize application",e.message)}}cacheElements(){this.elements={loadingScreen:document.getElementById("loadingScreen"),mainContainer:document.getElementById("mainContainer"),errorMessage:document.getElementById("errorMessage"),searchBox:document.getElementById("searchBox"),searchClear:document.getElementById("searchClear"),filterButtons:document.querySelectorAll(".filter-btn"),viewButtons:document.querySelectorAll(".view-btn"),modelCards:document.querySelectorAll(".model-card"),cardView:document.getElementById("cardView"),networkView:document.getElementById("networkView"),tableView:document.getElementById("tableView"),categoryGrid:document.getElementById("categoryGrid"),totalVariables:document.getElementById("total-variables"),visibleVariables:document.getElementById("visible-variables"),activeCategories:document.getElementById("active-categories"),missionCount:document.getElementById("mission-count"),eccoCount:document.getElementById("ecco-count"),issmCount:document.getElementById("issm-count"),cardamomCount:document.getElementById("cardamom-count"),cmsCount:document.getElementById("cms-count"),momoCount:document.getElementById("momo-count"),modal:document.getElementById("detailModal"),modalTitle:document.getElementById("modalTitle"),modalBody:document.getElementById("modalBody"),networkCanvas:document.getElementById("networkCanvas"),networkReset:document.getElementById("networkReset"),networkExport:document.getElementById("networkExport"),dataTable:document.getElementById("dataTable"),tableBody:document.getElementById("tableBody"),sortBy:document.getElementById("sortBy"),exportCSV:document.getElementById("exportCSV"),exportJSON:document.getElementById("exportJSON")}}initializeComponents(){this.dataManager=new DataManager,this.uiComponents=new UIComponents,this.networkView=new NetworkView,this.modalManager=new ModalManager}async loadData(){try{console.log("📊 Loading data..."),this.data=await this.dataManager.loadData(),this.filteredData=[...this.data.variables],console.log(`✅ Loaded ${this.data.variables.length} variables from ${this.data.models.length} models`)}catch(e){throw console.error("❌ Failed to load data:",e),new Error(`Data loading failed: ${e.message}`)}}setupEventListeners(){this.elements.searchBox?.addEventListener("input",this.handleSearch),this.elements.searchClear?.addEventListener("click",this.clearSearch.bind(this)),this.elements.filterButtons.forEach((e=>{e.addEventListener("click",this.handleFilter)})),this.elements.viewButtons.forEach((e=>{e.addEventListener("click",this.handleViewToggle)})),this.elements.modelCards.forEach((e=>{e.addEventListener("click",this.handleModelClick),e.addEventListener("keydown",(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.handleModelClick(e))}))})),document.addEventListener("keydown",this.handleKeyboard),window.addEventListener("resize",this.debounce(this.handleResize,250)),this.elements.modal?.addEventListener("click",(e=>{e.target===this.elements.modal&&this.modalManager.close()})),this.elements.networkReset?.addEventListener("click",(()=>{this.networkView.reset()})),this.elements.networkExport?.addEventListener("click",(()=>{this.networkView.exportImage()})),this.elements.sortBy?.addEventListener("change",this.handleTableSort.bind(this)),this.elements.exportCSV?.addEventListener("click",this.exportCSV.bind(this)),this.elements.exportJSON?.addEventListener("click",this.exportJSON.bind(this)),this.setupStatisticsInteractions()}setupStatisticsInteractions(){document.querySelectorAll(".stat-item").forEach((e=>{e.addEventListener("mouseenter",(()=>{this.uiComponents.showTooltip(e,this.getStatTooltip(e.id))})),e.addEventListener("mouseleave",(()=>{this.uiComponents.hideTooltip()}))}))}getStatTooltip(e){return{"total-variables":"Total number of variables across all Earth system models","visible-variables":"Number of variables currently shown based on filters","active-categories":"Number of variable categories currently displayed","mission-count":"Approximate number of satellite missions and data sources"}[e]||""}handleSearch(e){this.currentSearch=e.target.value.toLowerCase(),this.elements.searchClear&&this.elements.searchClear.classList.toggle("visible",this.currentSearch.length>0),this.filterAndRender(),this.trackEvent("search",{query:this.currentSearch})}clearSearch(){this.elements.searchBox.value="",this.currentSearch="",this.elements.searchClear?.classList.remove("visible"),this.filterAndRender()}handleFilter(e){this.elements.filterButtons.forEach((e=>{e.classList.remove("active"),e.setAttribute("aria-pressed","false")})),e.target.classList.add("active"),e.target.setAttribute("aria-pressed","true"),this.currentFilter=e.target.dataset.model,this.filterAndRender(),this.updateModelCardSelection(),this.trackEvent("filter",{model:this.currentFilter})}handleViewToggle(e){this.elements.viewButtons.forEach((e=>{e.classList.remove("active"),e.setAttribute("aria-pressed","false")})),e.target.classList.add("active"),e.target.setAttribute("aria-pressed","true"),this.currentView=e.target.dataset.view,this.switchView(),this.trackEvent("view_change",{view:this.currentView})}switchView(){switch(this.elements.cardView?.classList.remove("active"),this.elements.networkView?.classList.remove("active"),this.elements.tableView?.classList.remove("active"),this.currentView){case"cards":this.elements.cardView?.classList.add("active"),this.elements.cardView&&(this.elements.cardView.style.display="block"),this.elements.networkView&&(this.elements.networkView.style.display="none"),this.elements.tableView&&(this.elements.tableView.style.display="none");break;case"network":this.elements.networkView?.classList.add("active"),this.elements.cardView&&(this.elements.cardView.style.display="none"),this.elements.networkView&&(this.elements.networkView.style.display="block"),this.elements.tableView&&(this.elements.tableView.style.display="none"),setTimeout((()=>{this.networkView.init(this.elements.networkCanvas,this.filteredData,this.data.models)}),100);break;case"table":this.elements.tableView?.classList.add("active"),this.elements.cardView&&(this.elements.cardView.style.display="none"),this.elements.networkView&&(this.elements.networkView.style.display="none"),this.elements.tableView&&(this.elements.tableView.style.display="block"),this.renderTable()}}handleModelClick(e){const t=e.currentTarget.dataset.model;this.currentFilter=t,this.updateFilterButtons(),this.updateModelCardSelection(),this.filterAndRender(),this.showModelDetails(t),this.trackEvent("model_click",{model:t})}updateFilterButtons(){this.elements.filterButtons.forEach((e=>{const t=e.dataset.model===this.currentFilter;e.classList.toggle("active",t),e.setAttribute("aria-pressed",t.toString())}))}updateModelCardSelection(){this.elements.modelCards.forEach((e=>{const t="all"===this.currentFilter||e.dataset.model===this.currentFilter;e.classList.toggle("selected",t)}))}handleVariableClick(e){this.showVariableDetails(e),this.trackEvent("variable_click",{variable:e.variable})}handleKeyboard(e){if("INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName)switch(e.key){case"/":e.preventDefault(),this.elements.searchBox?.focus();break;case"Escape":this.modalManager.close(),this.elements.searchBox?.blur();break;case"1":case"2":case"3":if(e.ctrlKey||e.metaKey){e.preventDefault();const t=parseInt(e.key)-1,s=Array.from(this.elements.viewButtons);s[t]&&s[t].click()}}else"Escape"===e.key&&e.target.blur()}handleResize(){"network"===this.currentView&&this.networkView.resize(),this.uiComponents.updateResponsiveLayout()}filterAndRender(){this.filteredData=this.dataManager.filterData(this.data.variables,this.currentFilter,this.currentSearch),this.render()}render(){this.renderCategories(),this.updateStatistics(),this.updateModelCounts(),this.highlightSearchResults(),"table"===this.currentView?this.renderTable():"network"===this.currentView&&this.networkView.update(this.filteredData)}renderCategories(){if(!this.elements.categoryGrid)return;const e=this.dataManager.groupByCategory(this.filteredData);this.uiComponents.renderCategories(this.elements.categoryGrid,e,{onVariableClick:this.handleVariableClick.bind(this),onModelTagClick:this.handleModelTagClick.bind(this)})}handleModelTagClick(e,t){t.stopPropagation(),this.currentFilter=e,this.updateFilterButtons(),this.updateModelCardSelection(),this.filterAndRender(),this.trackEvent("model_tag_click",{model:e})}updateStatistics(){const e=this.dataManager.calculateStatistics(this.filteredData,this.data);this.elements.visibleVariables&&(this.elements.visibleVariables.querySelector("h3").textContent=e.visibleVariables),this.elements.activeCategories&&(this.elements.activeCategories.querySelector("h3").textContent=e.activeCategories),this.elements.missionCount&&(this.elements.missionCount.querySelector("h3").textContent=e.totalMissions+"+")}updateModelCounts(){const e=this.dataManager.getModelCounts(this.filteredData),t={ECCO:this.elements.eccoCount,ISSM:this.elements.issmCount,CARDAMOM:this.elements.cardamomCount,"CMS-FLUX":this.elements.cmsCount,"MOMO-CHEM":this.elements.momoCount};Object.entries(e).forEach((([e,s])=>{const i=t[e];i&&(i.textContent=s)}))}highlightSearchResults(){this.currentSearch?this.uiComponents.highlightSearchResults(this.currentSearch):document.querySelectorAll(".highlighted").forEach((e=>{e.classList.remove("highlighted")}))}renderTable(){this.elements.tableBody&&this.uiComponents.renderTable(this.elements.tableBody,this.filteredData,{onVariableClick:this.handleVariableClick.bind(this)})}handleTableSort(e){const t=e.target.value;this.filteredData=this.dataManager.sortData(this.filteredData,t),this.renderTable(),this.trackEvent("table_sort",{sortBy:t})}showVariableDetails(e){this.modalManager.showVariableDetails(e,this.data)}showModelDetails(e){const t=this.data.models.find((t=>t.name===e)),s=this.filteredData.filter((t=>t.models.some((t=>t===e))));this.modalManager.showModelDetails(t,s)}exportCSV(){const e=this.dataManager.exportToCSV(this.filteredData);this.downloadFile(e,"earth-system-variables.csv","text/csv"),this.trackEvent("export",{format:"csv",count:this.filteredData.length})}exportJSON(){const e=this.dataManager.exportToJSON(this.filteredData);this.downloadFile(e,"earth-system-variables.json","application/json"),this.trackEvent("export",{format:"json",count:this.filteredData.length})}downloadFile(e,t,s){const i=new Blob([e],{type:s}),a=URL.createObjectURL(i),n=document.createElement("a");n.href=a,n.download=t,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(a)}hideLoadingScreen(){const e=this.elements.loadingScreen,t=this.elements.mainContainer;e&&t&&(e.classList.add("fade-out"),t.style.display="block",t.classList.add("fade-in"),setTimeout((()=>{e.style.display="none",this.isLoading=!1}),500))}showError(e,t){const s=this.elements.errorMessage;if(s){const i=s.querySelector("h3"),a=s.querySelector("#errorText");i&&(i.textContent=e),a&&(a.textContent=t),s.classList.add("show"),this.elements.loadingScreen&&(this.elements.loadingScreen.style.display="none")}console.error(`${e}: ${t}`)}trackEvent(e,t={}){"undefined"!=typeof gtag&&gtag("event",e,{...t,app_name:"Earth System Model Viz",app_version:"1.0.0"}),console.log(`📊 Event: ${e}`,t)}debounce(e,t){let s;return function(...i){clearTimeout(s),s=setTimeout((()=>{clearTimeout(s),e(...i)}),t)}}showAbout(){this.modalManager.show("About Earth System Model Visualization",'\n      <div class="modal-section">\n        <h4>About This Visualization</h4>\n        <p>This interactive visualization explores the relationships between Earth system model variables, satellite missions, and data assimilation systems used in climate and Earth science research.</p>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Earth System Models</h4>\n        <ul>\n          <li><strong>ECCO</strong> - Ocean circulation and sea ice modeling</li>\n          <li><strong>ISSM</strong> - Ice sheet dynamics and sea level projection</li>\n          <li><strong>CARDAMOM</strong> - Terrestrial carbon cycle processes</li>\n          <li><strong>CMS-FLUX</strong> - Atmospheric carbon monitoring</li>\n          <li><strong>MOMO-CHEM</strong> - Atmospheric chemistry and air quality</li>\n        </ul>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Data Sources</h4>\n        <p>Data includes information from 100+ satellite missions, ground-based networks, and reanalysis products spanning ocean, land, atmosphere, and carbon cycle observations.</p>\n      </div>\n      \n      <div class="modal-section">\n        <h4>How to Use</h4>\n        <ul>\n          <li>Use the search bar to find specific variables or missions</li>\n          <li>Click model buttons to filter by Earth system model</li>\n          <li>Switch between card, network, and table views</li>\n          <li>Click on variables for detailed information</li>\n          <li>Export filtered data as CSV or JSON</li>\n        </ul>\n      </div>\n      \n      <div class="modal-section">\n        <h4>Keyboard Shortcuts</h4>\n        <ul>\n          <li><kbd>/</kbd> - Focus search box</li>\n          <li><kbd>Esc</kbd> - Close modals</li>\n          <li><kbd>Ctrl+1/2/3</kbd> - Switch views</li>\n        </ul>\n      </div>\n    ')}destroy(){document.removeEventListener("keydown",this.handleKeyboard),window.removeEventListener("resize",this.handleResize),this.networkView&&this.networkView.destroy(),this.modalManager&&this.modalManager.destroy(),this.data=null,this.filteredData=null,console.log("🧹 Application cleaned up")}}window.showAbout=function(){window.app&&window.app.showAbout()},window.closeModal=function(){window.app&&window.app.modalManager&&window.app.modalManager.close()},window.filterByModel=function(e,t){window.app&&window.app.handleModelTagClick(e,t)},document.addEventListener("DOMContentLoaded",(async()=>{try{if(console.log("🌍 Starting Earth System Model Visualization..."),window.app=new EarthSystemViz,await window.app.init(),"serviceWorker"in navigator)try{await navigator.serviceWorker.register("/sw.js"),console.log("✅ Service Worker registered")}catch(e){console.warn("⚠️ Service Worker registration failed:",e)}}catch(e){console.error("❌ Application initialization failed:",e);const t=document.getElementById("errorMessage");t&&t.classList.add("show");const s=document.getElementById("loadingScreen");s&&(s.style.display="none")}})),document.addEventListener("visibilitychange",(()=>{window.app&&(document.hidden?window.app.trackEvent("page_hidden"):window.app.trackEvent("page_visible"))})),window.addEventListener("beforeunload",(()=>{window.app&&(window.app.trackEvent("page_unload"),window.app.destroy())})),window.addEventListener("online",(()=>{console.log("🌐 Connection restored"),window.app&&window.app.trackEvent("online")})),window.addEventListener("offline",(()=>{console.log("📡 Connection lost"),window.app&&window.app.trackEvent("offline")})),"undefined"!=typeof module&&module.exports&&(module.exports=EarthSystemViz);